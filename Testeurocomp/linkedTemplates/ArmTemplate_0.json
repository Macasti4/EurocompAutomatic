{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Testeurocomp"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"trigger2_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/00523ed9-4ac0-4e0c-8999-d8b18f922bde/resourceGroups/eurocomp/providers/Microsoft.Storage/storageAccounts/eurocomp417d5b"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "handleId",
						"type": "varchar"
					},
					{
						"name": "fieldType",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "description",
						"type": "varchar"
					},
					{
						"name": "productImageUrl",
						"type": "varchar"
					},
					{
						"name": "collection",
						"type": "varchar"
					},
					{
						"name": "sku",
						"type": "varchar"
					},
					{
						"name": "ribbon",
						"type": "varchar"
					},
					{
						"name": "price",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "surcharge",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "visible",
						"type": "bit"
					},
					{
						"name": "discountMode",
						"type": "varchar"
					},
					{
						"name": "discountValue",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "inventory",
						"type": "int",
						"precision": 10
					},
					{
						"name": "weight",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "cost",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "productOptionName1",
						"type": "varchar"
					},
					{
						"name": "productOptionType1",
						"type": "varchar"
					},
					{
						"name": "productOptionDescription1",
						"type": "varchar"
					},
					{
						"name": "productOptionName2",
						"type": "varchar"
					},
					{
						"name": "productOptionType2",
						"type": "varchar"
					},
					{
						"name": "productOptionDescription2",
						"type": "varchar"
					},
					{
						"name": "productOptionName3",
						"type": "varchar"
					},
					{
						"name": "productOptionType3",
						"type": "varchar"
					},
					{
						"name": "productOptionDescription3",
						"type": "varchar"
					},
					{
						"name": "productOptionName4",
						"type": "varchar"
					},
					{
						"name": "productOptionType4",
						"type": "varchar"
					},
					{
						"name": "productOptionDescription4",
						"type": "varchar"
					},
					{
						"name": "productOptionName5",
						"type": "varchar"
					},
					{
						"name": "productOptionType5",
						"type": "varchar"
					},
					{
						"name": "productOptionDescription5",
						"type": "varchar"
					},
					{
						"name": "productOptionName6",
						"type": "varchar"
					},
					{
						"name": "productOptionType6",
						"type": "varchar"
					},
					{
						"name": "productOptionDescription6",
						"type": "varchar"
					},
					{
						"name": "additionalInfoTitle1",
						"type": "varchar"
					},
					{
						"name": "additionalInfoDescription1",
						"type": "varchar"
					},
					{
						"name": "additionalInfoTitle2",
						"type": "varchar"
					},
					{
						"name": "additionalInfoDescription2",
						"type": "varchar"
					},
					{
						"name": "additionalInfoTitle3",
						"type": "varchar"
					},
					{
						"name": "additionalInfoDescription3",
						"type": "varchar"
					},
					{
						"name": "additionalInfoTitle4",
						"type": "varchar"
					},
					{
						"name": "additionalInfoDescription4",
						"type": "varchar"
					},
					{
						"name": "additionalInfoTitle5",
						"type": "varchar"
					},
					{
						"name": "additionalInfoDescription5",
						"type": "varchar"
					},
					{
						"name": "additionalInfoTitle6",
						"type": "varchar"
					},
					{
						"name": "additionalInfoDescription6",
						"type": "varchar"
					},
					{
						"name": "customTextField1",
						"type": "varchar"
					},
					{
						"name": "customTextCharLimit1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "customTextMandatory1",
						"type": "bit"
					},
					{
						"name": "customTextField2",
						"type": "varchar"
					},
					{
						"name": "customTextCharLimit2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "customTextMandatory2",
						"type": "bit"
					},
					{
						"name": "brand",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "EjemploTabla"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "nombre_del_archivo.txt",
						"container": "testpython"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Este es el contenido del archivo generado.",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InventarioEUROcsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "inventario_eurocomp.csv",
						"container": "testpython"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "codigo",
						"type": "String"
					},
					{
						"name": "cod_producto",
						"type": "String"
					},
					{
						"name": "cod_proveedor",
						"type": "String"
					},
					{
						"name": "cod_hacienda",
						"type": "String"
					},
					{
						"name": "descripcion",
						"type": "String"
					},
					{
						"name": "desc_corta",
						"type": "String"
					},
					{
						"name": "presentacion",
						"type": "String"
					},
					{
						"name": "colores",
						"type": "String"
					},
					{
						"name": "familia_id",
						"type": "String"
					},
					{
						"name": "familia",
						"type": "String"
					},
					{
						"name": "marca",
						"type": "String"
					},
					{
						"name": "clase",
						"type": "String"
					},
					{
						"name": "modelo",
						"type": "String"
					},
					{
						"name": "item_grupo_1",
						"type": "String"
					},
					{
						"name": "item_grupo_2",
						"type": "String"
					},
					{
						"name": "item_grupo_3",
						"type": "String"
					},
					{
						"name": "precio",
						"type": "String"
					},
					{
						"name": "stock",
						"type": "String"
					},
					{
						"name": "image_url",
						"type": "String"
					},
					{
						"name": "image_url_1",
						"type": "String"
					},
					{
						"name": "image_url_2",
						"type": "String"
					},
					{
						"name": "image_url_3",
						"type": "String"
					},
					{
						"name": "image_url_4",
						"type": "String"
					},
					{
						"name": "image_url_5",
						"type": "String"
					},
					{
						"name": "caracteristicas",
						"type": "String"
					},
					{
						"name": "itemref_1",
						"type": "String"
					},
					{
						"name": "itemref_2",
						"type": "String"
					},
					{
						"name": "itemref_3",
						"type": "String"
					},
					{
						"name": "itemref_4",
						"type": "String"
					},
					{
						"name": "itemref_5",
						"type": "String"
					},
					{
						"name": "itemref_6",
						"type": "String"
					},
					{
						"name": "itemref_7",
						"type": "String"
					},
					{
						"name": "itemref_8",
						"type": "String"
					},
					{
						"name": "itemref_9",
						"type": "String"
					},
					{
						"name": "itemref_10",
						"type": "String"
					},
					{
						"name": "itemref_11",
						"type": "String"
					},
					{
						"name": "itemref_12",
						"type": "String"
					},
					{
						"name": "itemref_13",
						"type": "String"
					},
					{
						"name": "itemref_14",
						"type": "String"
					},
					{
						"name": "privacidad",
						"type": "String"
					},
					{
						"name": "peso",
						"type": "String"
					},
					{
						"name": "medida",
						"type": "String"
					},
					{
						"name": "equivalencia",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "InventarioEUROcsv",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> InventarioEUROcsv",
							"dataset": {
								"referenceName": "InventarioEUROcsv",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared InventarioEUROcsv = let AdfDoc = AzureStorage.BlobContents(\"https://eurocomp417d5b.blob.core.windows.net/testpython/inventario_eurocomp.csv\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]) in  PromotedHeaders;\r\nshared UserQuery = let \n    Source = #\"InventarioEUROcsv\",\n  #\"Removed columns 1\" = Table.RemoveColumns(Source, {\"cod_producto\", \"cod_proveedor\", \"cod_hacienda\", \"desc_corta\", \"presentacion\", \"colores\", \"familia_id\", \"clase\", \"modelo\", \"item_grupo_1\", \"item_grupo_2\", \"item_grupo_3\", \"image_url_2\", \"image_url_3\", \"image_url_4\", \"image_url_5\", \"caracteristicas\", \"itemref_1\", \"itemref_2\", \"itemref_3\", \"itemref_4\", \"itemref_5\", \"itemref_6\", \"itemref_7\", \"itemref_8\", \"itemref_9\", \"itemref_10\", \"itemref_11\", \"itemref_12\", \"itemref_13\", \"itemref_14\", \"privacidad\", \"peso\", \"medida\", \"equivalencia\"}),\n    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed columns 1\",{{\"codigo\", \"sku\"}, {\"descripcion\", \"name\"}, {\"familia\", \"collection\"}, {\"marca\", \"brand\"}, {\"precio\", \"price\"}, {\"stock\", \"inventory\"}}),\n    #\"Added Custom\" = Table.AddColumn( #\"Renamed Columns\", \"fieldType\", each \"Product\"),\n    #\"Added Custom1\" = Table.AddColumn(#\"Added Custom\", \"handleId\", each \"product_\"&[sku]),\n    #\"Added Custom2\" = Table.AddColumn(#\"Added Custom1\", \"description\", each \"Imágenes de referencia\n ¿Cómo comprar?\n 1-Agrega al carrito en “COMPRAR”\n 2-Registro: Completa tus datos y sigue los pasos\n 3-Selecciona el método de entrega:\"),\n     #\"Inserted Prefix\" = Table.AddColumn(#\"Added Custom2\", \"Prefix\", each \"eurocompcr.com/\" & [#\"image_url\"], type text),\n  #\"Inserted conditional column\" = Table.AddColumn(#\"Inserted Prefix\", \"Custom\", each if [Prefix] <> \"eurocompcr.com/\" then [Prefix] else \"\"),\n  #\"Removed columns 2\" = Table.RemoveColumns(#\"Inserted conditional column\", {\"Prefix\"}),\n  #\"Renamed columns 1\" = Table.RenameColumns(#\"Removed columns 2\", {{\"Custom\", \"Prefix\"}}),\n    #\"Inserted Prefix1\" = Table.AddColumn(#\"Renamed columns 1\", \"Prefix.1\", each \"eurocompcr.com/\" & [#\"image_url_1\"], type text),\n  #\"Inserted conditional column 1\" = Table.AddColumn(#\"Inserted Prefix1\", \"Custom\", each if [Prefix.1] <> \"eurocompcr.com/\" then [Prefix.1] else \"\"),\n  #\"Removed columns 3\" = Table.RemoveColumns(#\"Inserted conditional column 1\", {\"Prefix.1\"}),\n  #\"Renamed columns 2\" = Table.RenameColumns(#\"Removed columns 3\", {{\"Custom\", \"Prefix.1\"}}),\n    #\"Removed Columns1\" = Table.RemoveColumns(#\"Renamed columns 2\",{\"image_url\",\"image_url_1\"}),\n    #\"Merged Columns\" = Table.CombineColumns(#\"Removed Columns1\",{\"Prefix\", \"Prefix.1\"},Combiner.CombineTextByDelimiter(\";\", QuoteStyle.None),\"productImageUrl\"),\n    #\"Replaced Value\" = Table.ReplaceValue(#\"Merged Columns\",\";\",\"\",Replacer.ReplaceValue,{\"productImageUrl\"}),\n  #\"Replaced value 1\" = Table.ReplaceValue(#\"Replaced Value\", \"jpg;\", \"jpg\", Replacer.ReplaceText, {\"productImageUrl\"}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Replaced value 1\", {{\"price\", Currency.Type}}),\n    #\"Added Custom4\" = Table.AddColumn(#\"Changed column type\", \"Custom.1\", each [price]*600.0*1.2*1.13),\n    #\"Filtered Rows\" = Table.SelectRows(#\"Added Custom4\", each ([inventory] <> \"1.000\")),\n    #\"Removed Columns2\" = Table.RemoveColumns(#\"Filtered Rows\",{\"price\"}),\n    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns2\",{{\"Custom.1\", \"price\"}}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns1\",{{\"price\", Currency.Type}}),\n  #\"Inserted rounding\" = Table.AddColumn(#\"Changed Type\", \"Inserted rounding\", each Number.Round([price]/1000, 2), Currency.Type),\n  #\"Inserted multiplication\" = Table.AddColumn(#\"Inserted rounding\", \"Multiplication\", each [Inserted rounding] * 1000, Currency.Type),\n  #\"Filtered rows 1\" = Table.SelectRows(#\"Inserted multiplication\", each [Multiplication] <> 0),\n\n  #\"Removed Columns3\" = Table.RemoveColumns(#\"Filtered rows 1\",{\"price\", \"Inserted rounding\"}),\n    #\"Renamed Columns2\" = Table.RenameColumns(#\"Removed Columns3\",{{\"Multiplication\", \"price\"}}),\n    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Renamed Columns2\",{{\"inventory\", Int64.Type}}),\n    #\"Added Conditional Column\" = Table.AddColumn(#\"Changed Type1\", \"Inventory1\", each if [inventory] > 30 then 30 else [inventory]),\n    #\"Renamed Columns3\" = Table.RenameColumns(#\"Added Conditional Column\",{{\"inventory\", \"inventory3\"}, {\"Inventory1\", \"inventory\"}}),\n    #\"Removed Columns4\" = Table.RemoveColumns(#\"Renamed Columns3\",{\"inventory3\"}),\n    #\"Added Custom5\" = Table.AddColumn(#\"Removed Columns4\", \"ribbon\", each \"\"),\n    #\"Added Custom6\" = Table.AddColumn(#\"Added Custom5\", \"surcharge\", each \"\"),\n    #\"Added Custom7\" = Table.AddColumn(#\"Added Custom6\", \"visible\", each \"TRUE\"),\n    #\"Added Custom8\" = Table.AddColumn(#\"Added Custom7\", \"discountMode\", each \"PERCENT\"),\n    #\"Added Custom9\" = Table.AddColumn(#\"Added Custom8\", \"discountValue\", each \"0\"),\n    #\"Added Custom10\" = Table.AddColumn(#\"Added Custom9\", \"weight\", each \"\"),\n    #\"Added Custom11\" = Table.AddColumn(#\"Added Custom10\", \"cost\", each \"\"),\n    #\"Added Custom12\" = Table.AddColumn(#\"Added Custom11\", \"productOptionName1\", each \"\"),\n    #\"Added Custom13\" = Table.AddColumn(#\"Added Custom12\", \"productOptionType1\", each \"\"),\n    #\"Added Custom14\" = Table.AddColumn(#\"Added Custom13\", \"productOptionDescription1\", each \"\"),\n    #\"Added Custom15\" = Table.AddColumn(#\"Added Custom14\", \"productOptionName2\", each \"\"),\n    #\"Added Custom16\" = Table.AddColumn(#\"Added Custom15\", \"productOptionType2\", each \"\"),\n    #\"Added Custom17\" = Table.AddColumn(#\"Added Custom16\", \"productOptionDescription2\", each \"\"),\n    #\"Added Custom18\" = Table.AddColumn(#\"Added Custom17\", \"productOptionName3\", each \"\"),\n    #\"Added Custom19\" = Table.AddColumn(#\"Added Custom18\", \"productOptionType3\", each \"\"),\n    #\"Added Custom20\" = Table.AddColumn(#\"Added Custom19\", \"productOptionDescription3\", each \"\"),\n    #\"Added Custom21\" = Table.AddColumn(#\"Added Custom20\", \"productOptionName4\", each \"\"),\n    #\"Added Custom22\" = Table.AddColumn(#\"Added Custom21\", \"productOptionType4\", each \"\"),\n    #\"Added Custom23\" = Table.AddColumn(#\"Added Custom22\", \"productOptionDescription4\", each \"\"),\n    #\"Added Custom24\" = Table.AddColumn(#\"Added Custom23\", \"productOptionName5\", each \"\"),\n    #\"Added Custom25\" = Table.AddColumn(#\"Added Custom24\", \"productOptionType5\", each \"\"),\n    #\"Added Custom26\" = Table.AddColumn(#\"Added Custom25\", \"productOptionDescription5\", each \"\"),\n    #\"Added Custom27\" = Table.AddColumn(#\"Added Custom26\", \"productOptionName6\", each \"\"),\n    #\"Added Custom28\" = Table.AddColumn(#\"Added Custom27\", \"productOptionType6\", each \"\"),\n    #\"Added Custom29\" = Table.AddColumn(#\"Added Custom28\", \"productOptionDescription6\", each \"\"),\n    #\"Added Custom30\" = Table.AddColumn(#\"Added Custom29\", \"additionalInfoTitle1\", each \"\"),\n    #\"Added Custom31\" = Table.AddColumn(#\"Added Custom30\", \"additionalInfoDescription1\", each \"\"),\n    #\"Added Custom32\" = Table.AddColumn(#\"Added Custom31\", \"additionalInfoTitle2\", each \"\"),\n    #\"Added Custom33\" = Table.AddColumn(#\"Added Custom32\", \"additionalInfoDescription2\", each \"\"),\n    #\"Added Custom34\" = Table.AddColumn(#\"Added Custom33\", \"additionalInfoTitle3\", each \"\"),\n    #\"Added Custom35\" = Table.AddColumn(#\"Added Custom34\", \"additionalInfoDescription3\", each \"\"),\n    #\"Added Custom36\" = Table.AddColumn(#\"Added Custom35\", \"additionalInfoTitle4\", each \"\"),\n    #\"Added Custom37\" = Table.AddColumn(#\"Added Custom36\", \"additionalInfoDescription4\", each \"\"),\n    #\"Added Custom38\" = Table.AddColumn(#\"Added Custom37\", \"additionalInfoTitle5\", each \"\"),\n    #\"Added Custom39\" = Table.AddColumn(#\"Added Custom38\", \"additionalInfoDescription5\", each \"\"),\n    #\"Added Custom40\" = Table.AddColumn(#\"Added Custom39\", \"additionalInfoTitle6\", each \"\"),\n    #\"Added Custom41\" = Table.AddColumn(#\"Added Custom40\", \"additionalInfoDescription6\", each \"\"),\n    #\"Added Custom42\" = Table.AddColumn(#\"Added Custom41\", \"customTextField1\", each \"\"),\n    #\"Added Custom43\" = Table.AddColumn(#\"Added Custom42\", \"customTextCharLimit1\", each \"\"),\n    #\"Added Custom44\" = Table.AddColumn(#\"Added Custom43\", \"customTextMandatory1\", each \"\"),\n    #\"Added Custom45\" = Table.AddColumn(#\"Added Custom44\", \"customTextField2\", each \"\"),\n    #\"Added Custom46\" = Table.AddColumn(#\"Added Custom45\", \"customTextCharLimit2\", each \"\"),\n    #\"Added Custom47\" = Table.AddColumn(#\"Added Custom46\", \"customTextMandatory2\", each \"\"),\n    #\"Reordered Columns7\" = Table.ReorderColumns(#\"Added Custom47\",{\"handleId\",\"fieldType\",\"name\",\"description\",\"productImageUrl\",\"collection\",\"sku\",\"ribbon\",\"price\",\"surcharge\",\"visible\",\"discountMode\",\"discountValue\",\"inventory\",\"weight\",\"cost\",\"productOptionName1\",\"productOptionType1\",\"productOptionDescription1\",\"productOptionName2\",\"productOptionType2\",\"productOptionDescription2\",\"productOptionName3\",\"productOptionType3\",\"productOptionDescription3\",\"productOptionName4\",\"productOptionType4\",\"productOptionDescription4\",\"productOptionName5\",\"productOptionType5\",\"productOptionDescription5\",\"productOptionName6\",\"productOptionType6\",\"productOptionDescription6\",\"additionalInfoTitle1\",\"additionalInfoDescription1\",\"additionalInfoTitle2\",\"additionalInfoDescription2\",\"additionalInfoTitle3\",\"additionalInfoDescription3\",\"additionalInfoTitle4\",\"additionalInfoDescription4\",\"additionalInfoTitle5\",\"additionalInfoDescription5\",\"additionalInfoTitle6\",\"additionalInfoDescription6\",\"customTextField1\",\"customTextCharLimit1\",\"customTextMandatory1\",\"customTextField2\",\"customTextCharLimit2\",\"customTextMandatory2\",\"brand\"}),\r\n  #\"Changed column type 1\" = Table.TransformColumnTypes(#\"Reordered Columns7\", {{\"visible\", type text}})\n\nin\n#\"Changed column type 1\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InventarioEUROcsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Power Query1",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "powerquery1",
								"type": "DataFlowReference",
								"datasetParameters": {
									"InventarioEUROcsv": {},
									"UserQueryAzureSqlTable1": {},
									"UserQueryDelimitedText1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQueryAzureSqlTable1",
											"dataset": {
												"referenceName": "AzureSqlTable1",
												"type": "DatasetReference",
												"parameters": {}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: true,\n\tinput(\n\t\thandleId as string,\n\t\tfieldType as string,\n\t\tname as string,\n\t\tdescription as string,\n\t\tproductImageUrl as string,\n\t\tcollection as string,\n\t\tsku as string,\n\t\tribbon as string,\n\t\tprice as decimal(10,2),\n\t\tsurcharge as decimal(10,2),\n\t\tvisible as boolean,\n\t\tdiscountMode as string,\n\t\tdiscountValue as decimal(10,2),\n\t\tinventory as integer,\n\t\tweight as decimal(10,2),\n\t\tcost as decimal(10,2),\n\t\tproductOptionName1 as string,\n\t\tproductOptionType1 as string,\n\t\tproductOptionDescription1 as string,\n\t\tproductOptionName2 as string,\n\t\tproductOptionType2 as string,\n\t\tproductOptionDescription2 as string,\n\t\tproductOptionName3 as string,\n\t\tproductOptionType3 as string,\n\t\tproductOptionDescription3 as string,\n\t\tproductOptionName4 as string,\n\t\tproductOptionType4 as string,\n\t\tproductOptionDescription4 as string,\n\t\tproductOptionName5 as string,\n\t\tproductOptionType5 as string,\n\t\tproductOptionDescription5 as string,\n\t\tproductOptionName6 as string,\n\t\tproductOptionType6 as string,\n\t\tproductOptionDescription6 as string,\n\t\tadditionalInfoTitle1 as string,\n\t\tadditionalInfoDescription1 as string,\n\t\tadditionalInfoTitle2 as string,\n\t\tadditionalInfoDescription2 as string,\n\t\tadditionalInfoTitle3 as string,\n\t\tadditionalInfoDescription3 as string,\n\t\tadditionalInfoTitle4 as string,\n\t\tadditionalInfoDescription4 as string,\n\t\tadditionalInfoTitle5 as string,\n\t\tadditionalInfoDescription5 as string,\n\t\tadditionalInfoTitle6 as string,\n\t\tadditionalInfoDescription6 as string,\n\t\tcustomTextField1 as string,\n\t\tcustomTextCharLimit1 as integer,\n\t\tcustomTextMandatory1 as boolean,\n\t\tcustomTextField2 as string,\n\t\tcustomTextCharLimit2 as integer,\n\t\tcustomTextMandatory2 as boolean,\n\t\tbrand as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> UserQueryAzureSqlTable1"
										},
										{
											"name": "UserQueryDelimitedText1",
											"dataset": {
												"referenceName": "DelimitedText1",
												"type": "DatasetReference",
												"parameters": {}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Este es el contenido del archivo generado.} as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserQueryDelimitedText1"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/powerquery1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/testpython/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger2_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		}
	]
}